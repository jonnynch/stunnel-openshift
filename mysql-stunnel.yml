apiVersion: v1
kind: Template
metadata:
  name: mysql-stunnel
objects:
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: stunnel
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'stunnel:latest'
      runPolicy: Serial
      source:
        git:
          uri: 'https://github.com/jonnynch/stunnel-openshift.git'
        type: Git
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: 'centos:latest'
        type: Docker
      triggers:
        - type: ConfigChange
        - imageChange:
          type: ImageChange
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: centos
    spec:
      tags:
        - from:
            kind: DockerImage
            name: 'centos:latest'
          importPolicy:
          name: latest
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: stunnel
    spec:
      tags:
        - name: latest
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: mysql-stunnel
    spec:
      replicas: 1
      selector:
        app: mysql-stunnel
        deploymentconfig: mysql-stunnel
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: mysql-stunnel
            deploymentconfig: mysql-stunnel
        spec:
          containers:
            - env:
              - name: MYSQL_DATABASE
                value: testdb
              - name: MYSQL_PASSWORD
                value: pass
              - name: MYSQL_USER
                value: user
              image: image-registry.openshift-image-registry.svc:5000/openshift/mysql:8.0-el8
              name: mysql
              ports:
              - containerPort: 3306
                protocol: TCP
              resources: {}
            - imagePullPolicy: Always
              livenessProbe: {failureThreshold: 3, initialDelaySeconds: 1, periodSeconds: 10, successThreshold: 1, tcpSocket: {port: 33306}, timeoutSeconds: 1}
              name: stunnel
              ports: [{containerPort: 33306, protocol: TCP}]
              readinessProbe: {failureThreshold: 3, initialDelaySeconds: 1, periodSeconds: 10, successThreshold: 1, tcpSocket: {port: 33306}, timeoutSeconds: 1}
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - stunnel
            from:
              kind: ImageStreamTag
              name: 'stunnel:latest'
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: mysql-stunnel
      name: mysql-stunnel
    spec:
      ports:
        - name: 33306-tcp
          port: 33306
          protocol: TCP
          targetPort: 33306
      selector:
        deploymentconfig: mysql-stunnel
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: mysql-stunnel
      name: mysql-stunnel
    spec:
      port:
        targetPort: 33306-tcp
      tls:
        termination: passthrough
      to:
        kind: Service
        name: mysql-stunnel
        weight: 100
